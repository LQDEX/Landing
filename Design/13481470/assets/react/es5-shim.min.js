// !
// https://github.com/es-shims/es5-shim
// @license es5-shim Copyright 2009-2015 by contributors, MIT License
// see https://github.com/es-shims/es5-shim/blob/v4.1.8/LICENSE
(function(e, t) {


  if (typeof define === 'function' && define.amd) {
    define(t);
  } else if (typeof exports === 'object') {
    module.exports = t();
  } else {
    e.returnExports = t();
  }
}(this, () => {
  const e = Array; const t = e.prototype; const r = Object; const n = r.prototype; const a = Function.prototype; const i = String; const o = i.prototype; const l = Number; const u = l.prototype; const f = t.slice; const s = t.splice; const c = t.push; const v = t.unshift; const p = t.concat; const h = a.call; const g = Math.max; const y = Math.min; const d = n.toString; const w = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol'; let m; let b = Function.prototype.toString,
    T = function ke(e) {
      try {
        b.call(e);

        return true;
      } catch (t) {
        return false;
      }
    },
    x = '[object Function]',
    O = '[object GeneratorFunction]'; m = function Me(e) {
    if (typeof e !== 'function') {
      return false;
    } if (w) {
      return T(e);
    } const t = d.call(e);

    return t === x || t === O;
  }; let S; let j = RegExp.prototype.exec,
    E = function Fe(e) {
      try {
        j.call(e);

        return true;
      } catch (t) {
        return false;
      }
    },
    I = '[object RegExp]'; S = function Re(e) {
    if (typeof e !== 'object') {
      return false;
    }

    return w ? E(e) : d.call(e) === I;
  }; let D; let N = String.prototype.valueOf,
    k = function Ae(e) {
      try {
        N.call(e);

        return true;
      } catch (t) {
        return false;
      }
    },
    M = '[object String]'; D = function Ue(e) {
    if (typeof e === 'string') {
      return true;
    } if (typeof e !== 'object') {
      return false;
    }

    return w ? k(e) : d.call(e) === M;
  }; const F = (function(e) {
    const t = r.defineProperty && (function() {
      try {
        const e = {}; r.defineProperty(e, 'x', {
          enumerable: false,
          value: e
        }); for (const t in e) {
          return false;
        }

        return e.x === e;
      } catch (n) {
        return false;
      }
    }()); let n; if (t) {
      n = function(e, t, n, a) {
        if (!a && t in e) {
          return;
        }r.defineProperty(e, t, {
          configurable: true,
          enumerable: false,
          writable: true,
          value: n
        });
      };
    } else {
      n = function(e, t, r, n) {
        if (!n && t in e) {
          return;
        }e[t] = r;
      };
    }

    return function a(t, r, i) {
      for (const o in r) {
        if (e.call(r, o)) {
          n(t, o, r[o], i);
        }
      }
    };
  }(n.hasOwnProperty)); const R = function Ce(e) {
    const t = typeof e;

    return e === null || t !== 'object' && t !== 'function';
  }; const A = {
    ToInteger: function Pe(e) {
      let t = Number(e); if (t !== t) {
        t = 0;
      } else if (t !== 0 && t !== 1 / 0 && t !== -(1 / 0)) {
        t = (t > 0 || -1) * Math.floor(Math.abs(t));
      }

      return t;
    },
    ToPrimitive: function Ze(e) {
      let n, r, t; if (R(e)) {
        return e;
      }r = e.valueOf; if (m(r)) {
        t = r.call(e); if (R(t)) {
          return t;
        }
      }n = e.toString; if (m(n)) {
        t = n.call(e); if (R(t)) {
          return t;
        }
      } throw new TypeError();
    },
    ToObject(e) {
      if (e == null) {
        throw new TypeError(`can't convert ${e} to object`);
      }

      return r(e);
    },
    ToUint32: function Je(e) {
      return e >>> 0;
    }
  }; const U = function ze() {}; F(a, {
    bind: function $e(e) {
      const t = this; if (!m(t)) {
        throw new TypeError(`Function.prototype.bind called on incompatible ${t}`);
      } const n = f.call(arguments, 1); let a; const i = function() {
        if (this instanceof a) {
          const i = t.apply(this, p.call(n, f.call(arguments))); if (r(i) === i) {
            return i;
          }

          return this;
        }

        return t.apply(e, p.call(n, f.call(arguments)));
      }; const o = g(0, t.length - n.length); const l = []; for (let u = 0; u < o; u++) {
        c.call(l, `$${u}`);
      }a = Function('binder', `return function (${l.join(',')}){ return binder.apply(this, arguments); }`)(i); if (t.prototype) {
        U.prototype = t.prototype; a.prototype = new U(); U.prototype = null;
      }

      return a;
    }
  }); const C = h.bind(n.hasOwnProperty); const P = h.bind(n.toString); const Z = h.bind(o.slice); const J = h.bind(o.split); const z = e.isArray || function Be(e) {
    return P(e) === '[object Array]';
  }; const $ = [].unshift(0) !== 1; F(t, {
    unshift() {
      v.apply(this, arguments);

      return this.length;
    }
  }, $); F(e, { isArray: z }); const B = r('a'); const G = B[0] !== 'a' || !(0 in B); const H = function Ge(e) {
    let t = true; let r = true; if (e) {
      e.call('foo', (e, r, n) => {
        if (typeof n !== 'object') {
          t = false;
        }
      }); e.call([1], function() {


        r = typeof this === 'string';
      }, 'x');
    }

    return Boolean(e) && t && r;
  }; F(t, {
    forEach: function He(e) {
      const t = A.ToObject(this); const r = G && D(this) ? J(this, '') : t; let n = -1; const a = r.length >>> 0; let i; if (arguments.length > 1) {
        i = arguments[1];
      } if (!m(e)) {
        throw new TypeError('Array.prototype.forEach callback must be a function');
      } while (++n < a) {
        if (n in r) {
          if (typeof i !== 'undefined') {
            e.call(i, r[n], n, t);
          } else {
            e(r[n], n, t);
          }
        }
      }
    }
  }, !H(t.forEach)); F(t, {
    map: function Le(t) {
      const r = A.ToObject(this); const n = G && D(this) ? J(this, '') : r; const a = n.length >>> 0; const i = e(a); let o; if (arguments.length > 1) {
        o = arguments[1];
      } if (!m(t)) {
        throw new TypeError('Array.prototype.map callback must be a function');
      } for (let l = 0; l < a; l++) {
        if (l in n) {
          if (typeof o !== 'undefined') {
            i[l] = t.call(o, n[l], l, r);
          } else {
            i[l] = t(n[l], l, r);
          }
        }
      }

      return i;
    }
  }, !H(t.map)); F(t, {
    filter: function Xe(e) {
      const t = A.ToObject(this); const r = G && D(this) ? J(this, '') : t; const n = r.length >>> 0; const a = []; let i; let o; if (arguments.length > 1) {
        o = arguments[1];
      } if (!m(e)) {
        throw new TypeError('Array.prototype.filter callback must be a function');
      } for (let l = 0; l < n; l++) {
        if (l in r) {
          i = r[l]; if (typeof o === 'undefined' ? e(i, l, t) : e.call(o, i, l, t)) {
            c.call(a, i);
          }
        }
      }

      return a;
    }
  }, !H(t.filter)); F(t, {
    every: function Ye(e) {
      const t = A.ToObject(this); const r = G && D(this) ? J(this, '') : t; const n = r.length >>> 0; let a; if (arguments.length > 1) {
        a = arguments[1];
      } if (!m(e)) {
        throw new TypeError('Array.prototype.every callback must be a function');
      } for (let i = 0; i < n; i++) {
        if (i in r && !(typeof a === 'undefined' ? e(r[i], i, t) : e.call(a, r[i], i, t))) {
          return false;
        }
      }

      return true;
    }
  }, !H(t.every)); F(t, {
    some: function qe(e) {
      const t = A.ToObject(this); const r = G && D(this) ? J(this, '') : t; const n = r.length >>> 0; let a; if (arguments.length > 1) {
        a = arguments[1];
      } if (!m(e)) {
        throw new TypeError('Array.prototype.some callback must be a function');
      } for (let i = 0; i < n; i++) {
        if (i in r && (typeof a === 'undefined' ? e(r[i], i, t) : e.call(a, r[i], i, t))) {
          return true;
        }
      }

      return false;
    }
  }, !H(t.some)); let L = false; if (t.reduce) {
    L = typeof t.reduce.call('es5', (e, t, r, n) => n) === 'object';
  }F(t, {
    reduce: function Ke(e) {
      const t = A.ToObject(this); const r = G && D(this) ? J(this, '') : t; const n = r.length >>> 0; if (!m(e)) {
        throw new TypeError('Array.prototype.reduce callback must be a function');
      } if (n === 0 && arguments.length === 1) {
        throw new TypeError('reduce of empty array with no initial value');
      } let a = 0; let i; if (arguments.length >= 2) {
        i = arguments[1];
      } else {
        do {
          if (a in r) {
            i = r[a++]; break;
          } if (++a >= n) {
            throw new TypeError('reduce of empty array with no initial value');
          }
        } while (true);
      } for (;a < n; a++) {
        if (a in r) {
          i = e(i, r[a], a, t);
        }
      }

      return i;
    }
  }, !L); let X = false; if (t.reduceRight) {
    X = typeof t.reduceRight.call('es5', (e, t, r, n) => n) === 'object';
  }F(t, {
    reduceRight: function Qe(e) {
      const t = A.ToObject(this); const r = G && D(this) ? J(this, '') : t; const n = r.length >>> 0; if (!m(e)) {
        throw new TypeError('Array.prototype.reduceRight callback must be a function');
      } if (n === 0 && arguments.length === 1) {
        throw new TypeError('reduceRight of empty array with no initial value');
      } let a; let i = n - 1; if (arguments.length >= 2) {
        a = arguments[1];
      } else {
        do {
          if (i in r) {
            a = r[i--]; break;
          } if (--i < 0) {
            throw new TypeError('reduceRight of empty array with no initial value');
          }
        } while (true);
      } if (i < 0) {
        return a;
      } do {
        if (i in r) {
          a = e(a, r[i], i, t);
        }
      } while (i--);

      return a;
    }
  }, !X); const Y = t.indexOf && [
    0,
    1
  ].indexOf(1, 2) !== -1; F(t, {
    indexOf: function Ve(e) {
      const t = G && D(this) ? J(this, '') : A.ToObject(this); const r = t.length >>> 0; if (r === 0) {
        return -1;
      } let n = 0; if (arguments.length > 1) {
        n = A.ToInteger(arguments[1]);
      }n = n >= 0 ? n : g(0, r + n); for (;n < r; n++) {
        if (n in t && t[n] === e) {
          return n;
        }
      }

      return -1;
    }
  }, Y); const q = t.lastIndexOf && [
    0,
    1
  ].lastIndexOf(0, -3) !== -1; F(t, {
    lastIndexOf: function We(e) {
      const t = G && D(this) ? J(this, '') : A.ToObject(this); const r = t.length >>> 0; if (r === 0) {
        return -1;
      } let n = r - 1; if (arguments.length > 1) {
        n = y(n, A.ToInteger(arguments[1]));
      }n = n >= 0 ? n : r - Math.abs(n); for (;n >= 0; n--) {
        if (n in t && e === t[n]) {
          return n;
        }
      }

      return -1;
    }
  }, q); const K = (function() {
    const e = [
      1,
      2
    ]; const t = e.splice();

    return e.length === 2 && z(t) && t.length === 0;
  }()); F(t, {
    splice: function _e(e, t) {
      if (arguments.length === 0) {
        return [];
      }

      return s.apply(this, arguments);
    }
  }, !K); const Q = (function() {
    const e = {}; t.splice.call(e, 0, 0, 1);

    return e.length === 1;
  }()); F(t, {
    splice: function et(e, t) {
      if (arguments.length === 0) {
        return [];
      } let r = arguments; this.length = g(A.ToInteger(this.length), 0); if (arguments.length > 0 && typeof t !== 'number') {
        r = f.call(arguments); if (r.length < 2) {
          c.call(r, this.length - e);
        } else {
          r[1] = A.ToInteger(t);
        }
      }

      return s.apply(this, r);
    }
  }, !Q); const V = (function() {
    const t = new e(1e5); t[8] = 'x'; t.splice(1, 1);

    return t.indexOf('x') === 7;
  }()); const W = (function() {
    const e = 256; const t = []; t[e] = 'a'; t.splice(e + 1, 0, 'b');

    return t[e] === 'a';
  }()); F(t, {
    splice: function tt(e, t) {
      const r = A.ToObject(this); const n = []; const a = A.ToUint32(r.length); const o = A.ToInteger(e); const l = o < 0 ? g(a + o, 0) : y(o, a); const u = y(g(A.ToInteger(t), 0), a - l); let s = 0; let c; while (s < u) {
        c = i(l + s); if (C(r, c)) {
          n[s] = r[c];
        }s += 1;
      } const v = f.call(arguments, 2); const p = v.length; let h; if (p < u) {
        s = l; while (s < a - u) {
          c = i(s + u); h = i(s + p); if (C(r, c)) {
            r[h] = r[c];
          } else {
            delete r[h];
          }s += 1;
        }s = a; while (s > a - u + p) {
          delete r[s - 1]; s -= 1;
        }
      } else if (p > u) {
        s = a - u; while (s > l) {
          c = i(s + u - 1); h = i(s + p - 1); if (C(r, c)) {
            r[h] = r[c];
          } else {
            delete r[h];
          }s -= 1;
        }
      }s = l; for (let d = 0; d < v.length; ++d) {
        r[s] = v[d]; s += 1;
      }r.length = a - u + p;

      return n;
    }
  }, !V || !W); const _ = !{ toString: null }.propertyIsEnumerable('toString'); const ee = function() {}.propertyIsEnumerable('prototype'); const te = !C('x', '0'); const re = function(e) {
    const t = e.constructor;

    return t && t.prototype === e;
  }; const ne = [
    'window',
    'console',
    'parent',
    'self',
    'frames'
  ]; const ae = (function() {
    if (typeof window === 'undefined') {
      return false;
    } for (const e in window) {
      if (ne.indexOf(e) === -1 && C(window, e) && window[e] !== null && typeof window[e] === 'object') {
        try {
          re(window[e]);
        } catch (t) {
          return true;
        }
      }
    }

    return false;
  }()); const ie = [
    'toString',
    'toLocaleString',
    'valueOf',
    'hasOwnProperty',
    'isPrototypeOf',
    'propertyIsEnumerable',
    'constructor'
  ]; const oe = ie.length; const le = function rt(e) {
    const t = P(e); let r = t === '[object Arguments]'; if (!r) {
      r = !z(e) && e !== null && typeof e === 'object' && typeof e.length === 'number' && e.length >= 0 && m(e.callee);
    }

    return r;
  }; F(r, {
    keys: function nt(e) {
      const t = m(e); const r = le(e); const n = e !== null && typeof e === 'object'; const a = n && D(e); if (!n && !t && !r) {
        throw new TypeError('Object.keys called on a non-object');
      } const o = []; const l = ee && t; if (a && te || r) {
        for (let u = 0; u < e.length; ++u) {
          c.call(o, i(u));
        }
      } if (!r) {
        for (const f in e) {
          if (!(l && f === 'prototype') && C(e, f)) {
            c.call(o, i(f));
          }
        }
      } if (_) {
        const s = ae || re(e); for (let v = 0; v < oe; v++) {
          const p = ie[v]; if (!(s && p === 'constructor') && C(e, p)) {
            c.call(o, p);
          }
        }
      }

      return o;
    }
  }); const ue = r.keys && (function() {
    return r.keys(arguments).length === 2;
  }(1, 2)); const fe = r.keys; F(r, {
    keys: function at(e) {
      if (le(e)) {
        return fe(f.call(e));
      }

      return fe(e);
    }
  }, !ue); const se = -621987552e5; const ce = '-000001'; const ve = Date.prototype.toISOString && new Date(se).toISOString()
    .indexOf(ce) === -1; const pe = Date.prototype.toISOString && new Date(-1).toISOString() !== '1969-12-31T23:59:59.999Z'; F(Date.prototype, {
    toISOString: function it() {
      let a, e, n, r, t; if (!isFinite(this)) {
        throw new RangeError('Date.prototype.toISOString called on non-finite value.');
      }n = this.getUTCFullYear(); a = this.getUTCMonth(); n += Math.floor(a / 12); a = (a % 12 + 12) % 12; e = [
        a + 1,
        this.getUTCDate(),
        this.getUTCHours(),
        this.getUTCMinutes(),
        this.getUTCSeconds()
      ]; n = (n < 0 ? '-' : n > 9999 ? '+' : '') + Z(`00000${Math.abs(n)}`, n >= 0 && n <= 9999 ? -4 : -6); t = e.length; while (t--) {
        r = e[t]; if (r < 10) {
          e[t] = `0${r}`;
        }
      }

      return `${n}-${f.call(e, 0, 2).join('-')}T${f.call(e, 2).join(':')}.${Z(`000${this.getUTCMilliseconds()}`, -3)}Z`;
    }
  }, ve || pe); const he = (function() {
    try {
      return Date.prototype.toJSON && new Date(NaN).toJSON() === null && new Date(se).toJSON()
        .indexOf(ce) !== -1 && Date.prototype.toJSON.call({
        toISOString() {
          return true;
        }
      });
    } catch (e) {
      return false;
    }
  }()); if (!he) {
    Date.prototype.toJSON = function ot(e) {
      const t = r(this); const n = A.ToPrimitive(t); if (typeof n === 'number' && !isFinite(n)) {
        return null;
      } const a = t.toISOString; if (!m(a)) {
        throw new TypeError('toISOString property is not callable');
      }

      return a.call(t);
    };
  } const ge = Date.parse('+033658-09-27T01:46:40.000Z') === 1e15; const ye = !isNaN(Date.parse('2012-04-04T24:00:00.500Z')) || !isNaN(Date.parse('2012-11-31T23:59:59.000Z')) || !isNaN(Date.parse('2012-12-31T23:59:60.000Z')); const de = isNaN(Date.parse('2000-01-01T00:00:00.000Z')); if (!Date.parse || de || ye || !ge) {
    Date = (function(e) {
      var t = function s(r, n, a, o, l, u, f) {
        const s = arguments.length; let c; if (this instanceof e) {
          c = s === 1 && i(r) === r ? new e(t.parse(r)) : s >= 7 ? new e(r, n, a, o, l, u, f) : s >= 6 ? new e(r, n, a, o, l, u) : s >= 5 ? new e(r, n, a, o, l) : s >= 4 ? new e(r, n, a, o) : s >= 3 ? new e(r, n, a) : s >= 2 ? new e(r, n) : s >= 1 ? new e(r) : new e();
        } else {
          c = e.apply(this, arguments);
        }F(c, { constructor: t }, true);

        return c;
      }; const r = new RegExp('^' + '(\\d{4}|[+-]\\d{6})' + '(?:-(\\d{2})' + '(?:-(\\d{2})' + '(?:' + 'T(\\d{2})' + ':(\\d{2})' + '(?:' + ':(\\d{2})' + '(?:(\\.\\d{1,}))?' + ')?' + '(' + 'Z|' + '(?:' + '([-+])' + '(\\d{2})' + ':(\\d{2})' + ')' + ')?)?)?)?' + '$'); const n = [
        0,
        31,
        59,
        90,
        120,
        151,
        181,
        212,
        243,
        273,
        304,
        334,
        365
      ]; const a = function c(e, t) {
        const r = t > 1 ? 1 : 0;

        return n[t] + Math.floor((e - 1969 + r) / 4) - Math.floor((e - 1901 + r) / 100) + Math.floor((e - 1601 + r) / 400) + 365 * (e - 1970);
      }; const o = function v(t) {
        return l(new e(1970, 0, 1, 0, 0, 0, t));
      }; for (const u in e) {
        if (C(e, u)) {
          t[u] = e[u];
        }
      }F(t, {
        now: e.now,
        UTC: e.UTC
      }, true); t.prototype = e.prototype; F(t.prototype, { constructor: t }, true); const f = function p(t) {
        const n = r.exec(t); if (n) {
          let i = l(n[1]),
            u = l(n[2] || 1) - 1,
            f = l(n[3] || 1) - 1,
            s = l(n[4] || 0),
            c = l(n[5] || 0),
            v = l(n[6] || 0),
            p = Math.floor(l(n[7] || 0) * 1e3),
            h = Boolean(n[4] && !n[8]),
            g = n[9] === '-' ? 1 : -1,
            y = l(n[10] || 0),
            d = l(n[11] || 0),
            w; if (s < (c > 0 || v > 0 || p > 0 ? 24 : 25) && c < 60 && v < 60 && p < 1e3 && u > -1 && u < 12 && y < 24 && d < 60 && f > -1 && f < a(i, u + 1) - a(i, u)) {
            w = ((a(i, u) + f) * 24 + s + y * g) * 60; w = ((w + c + d * g) * 60 + v) * 1e3 + p; if (h) {
              w = o(w);
            } if (w >= -864e13 && w <= 864e13) {
              return w;
            }
          }

          return NaN;
        }

        return e.parse.apply(this, arguments);
      }; F(t, { parse: f });

      return t;
    }(Date));
  } if (!Date.now) {
    Date.now = function lt() {
      return (new Date()).getTime();
    };
  } const we = u.toFixed && (8e-5.toFixed(3) !== '0.000' || 0.9.toFixed(0) !== '1' || 1.255.toFixed(2) !== '1.25' || 0xde0b6b3a7640080.toFixed(0) !== '1000000000000000128'); var me = {
    base: 1e7,
    size: 6,
    data: [
      0,
      0,
      0,
      0,
      0,
      0
    ],
    multiply: function ut(e, t) {
      let r = -1; let n = t; while (++r < me.size) {
        n += e * me.data[r]; me.data[r] = n % me.base; n = Math.floor(n / me.base);
      }
    },
    divide: function ft(e) {
      let t = me.size,
        r = 0; while (--t >= 0) {
        r += me.data[t]; me.data[t] = Math.floor(r / e); r = r % e * me.base;
      }
    },
    numToString: function st() {
      let e = me.size; let t = ''; while (--e >= 0) {
        if (t !== '' || e === 0 || me.data[e] !== 0) {
          const r = i(me.data[e]); if (t === '') {
            t = r;
          } else {
            t += Z('0000000', 0, 7 - r.length) + r;
          }
        }
      }

      return t;
    },
    pow: function ct(e, t, r) {
      return t === 0 ? r : t % 2 === 1 ? ct(e, t - 1, r * e) : ct(e * e, t / 2, r);
    },
    log: function vt(e) {
      let t = 0; let r = e; while (r >= 4096) {
        t += 12; r /= 4096;
      } while (r >= 2) {
        t += 1; r /= 2;
      }

      return t;
    }
  }; F(u, {
    toFixed: function pt(e) {
      let a, f, n, o, r, s, t, u; t = l(e); t = t !== t ? 0 : Math.floor(t); if (t < 0 || t > 20) {
        throw new RangeError('Number.toFixed called with invalid number of decimals');
      }r = l(this); if (r !== r) {
        return 'NaN';
      } if (r <= -1e21 || r >= 1e21) {
        return i(r);
      }n = ''; if (r < 0) {
        n = '-'; r = -r;
      }a = '0'; if (r > 1e-21) {
        o = me.log(r * me.pow(2, 69, 1)) - 69; u = o < 0 ? r * me.pow(2, -o, 1) : r / me.pow(2, o, 1); u *= 4503599627370496; o = 52 - o; if (o > 0) {
          me.multiply(0, u); f = t; while (f >= 7) {
            me.multiply(1e7, 0); f -= 7;
          }me.multiply(me.pow(10, f, 1), 0); f = o - 1; while (f >= 23) {
            me.divide(1 << 23); f -= 23;
          }me.divide(1 << f); me.multiply(1, 1); me.divide(2); a = me.numToString();
        } else {
          me.multiply(0, u); me.multiply(1 << -o, 0); a = me.numToString() + Z('0.00000000000000000000', 2, 2 + t);
        }
      } if (t > 0) {
        s = a.length; if (s <= t) {
          a = n + Z('0.0000000000000000000', 0, t - s + 2) + a;
        } else {
          a = `${n + Z(a, 0, s - t)}.${Z(a, s - t)}`;
        }
      } else {
        a = n + a;
      }

      return a;
    }
  }, we); if ('ab'.split(/(?:ab)*/).length !== 2 || '.'.split(/(.?)(.?)/).length !== 4 || 'tesst'.split(/(s)*/)[1] === 't' || 'test'.split(/(?:)/, -1).length !== 4 || ''.split(/.?/).length || '.'.split(/()()/).length > 1) {
    (function() {
      const e = typeof (/()??/).exec('')[1] === 'undefined'; o.split = function(t, r) {
        let n = this; if (typeof t === 'undefined' && r === 0) {
          return [];
        } if (!S(t)) {
          return J(this, t, r);
        } const a = []; let i = (t.ignoreCase ? 'i' : '') + (t.multiline ? 'm' : '') + (t.extended ? 'x' : '') + (t.sticky ? 'y' : ''),
          o = 0,
          l, u, s, v; const p = new RegExp(t.source, `${i}g`); n = String(n); if (!e) {
          l = new RegExp(`^${p.source}$(?!\\s)`, i);
        } const h = typeof r === 'undefined' ? -1 >>> 0 : A.ToUint32(r); u = p.exec(n); while (u) {
          s = u.index + u[0].length; if (s > o) {
            c.call(a, Z(n, o, u.index)); if (!e && u.length > 1) {
              u[0].replace(l, function() {
                for (let e = 1; e < arguments.length - 2; e++) {
                  if (typeof arguments[e] === 'undefined') {
                    u[e] = void 0;
                  }
                }
              });
            } if (u.length > 1 && u.index < n.length) {
              c.apply(a, f.call(u, 1));
            }v = u[0].length; o = s; if (a.length >= h) {
              break;
            }
          } if (p.lastIndex === u.index) {
            p.lastIndex++;
          }u = p.exec(n);
        } if (o === n.length) {
          if (v || !p.test('')) {
            c.call(a, '');
          }
        } else {
          c.call(a, Z(n, o));
        }

        return a.length > h ? Z(a, 0, h) : a;
      };
    }());
  } else if ('0'.split(void 0, 0).length) {
    o.split = function ht(e, t) {
      if (typeof e === 'undefined' && t === 0) {
        return [];
      }

      return J(this, e, t);
    };
  } const be = o.replace; const Te = (function() {
    const e = []; 'x'.replace(/x(.)?/g, (t, r) => {
      c.call(e, r);
    });

    return e.length === 1 && typeof e[0] === 'undefined';
  }()); if (!Te) {
    o.replace = function gt(e, t) {
      const r = m(t); const n = S(e) && (/\)[*?]/).test(e.source); if (!r || !n) {
        return be.call(this, e, t);
      } const a = function(r) {
        const n = arguments.length; const a = e.lastIndex; e.lastIndex = 0; const i = e.exec(r) || []; e.lastIndex = a; c.call(i, arguments[n - 2], arguments[n - 1]);

        return t.apply(this, i);
      };

      return be.call(this, e, a);

    };
  } const xe = o.substr; const Oe = ''.substr && '0b'.substr(-1) !== 'b'; F(o, {
    substr: function yt(e, t) {
      let r = e; if (e < 0) {
        r = g(this.length + e, 0);
      }

      return xe.call(this, r, t);
    }
  }, Oe); const Se = '	\n\f\r \xa0\u1680\u180e\u2000\u2001\u2002\u2003' + '\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028' + '\u2029\ufeff'; const je = '\u200b'; const Ee = `[${Se}]`; const Ie = new RegExp(`^${Ee}${Ee}*`); const De = new RegExp(`${Ee + Ee}*$`); const Ne = o.trim && (Se.trim() || !je.trim()); F(o, {
    trim: function dt() {
      if (typeof this === 'undefined' || this === null) {
        throw new TypeError(`can't convert ${this} to object`);
      }

      return i(this).replace(Ie, '')
        .replace(De, '');
    }
  }, Ne); if (parseInt(`${Se}08`) !== 8 || parseInt(`${Se}0x16`) !== 22) {
    parseInt = (function(e) {
      const t = /^0[xX]/;

      return function r(n, a) {
        const o = i(n).trim(); const u = l(a) || (t.test(o) ? 16 : 10);

        return e(o, u);
      };
    }(parseInt));
  }
}));
// # sourceMappingURL=es5-shim.map
